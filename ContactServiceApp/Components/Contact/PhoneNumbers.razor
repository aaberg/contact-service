@using ContactServiceGrainInterfaces.Contact
@using ContactServiceApp.Contacts
@using ContactServiceApp.Identity
@inject ContactService ContactService

<div class="d-flex">
    <MudIcon Icon="@Icons.Material.Filled.Phone" Class="mr-4"></MudIcon>
    <div>
        @foreach (var phone in Contact?.Phones ?? Array.Empty<Phone>())
        {
            
            <div class="d-flex flex-row hover:mud-dark-hover">
                <MudText Typo="Typo.body1" Class="">@phone.PhoneNumber</MudText>
                <MudMenu Icon="@Icons.Material.Filled.MoreVert" Variant="Variant.Text" Size="Size.Small">
                    <MudMenuItem OnClick="() => RemovePhone(phone)">Remove</MudMenuItem>
                </MudMenu>
            </div>
        }

        <MudLink OnClick="OpenAddPhoneDialog" Variant="Variant.Text">Add phone</MudLink>

    </div>
</div>

<MudDialog @bind-IsVisible="_addPhoneDialogIsVisible" Options="_defaultDialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Phone"></MudIcon>
            Add phone
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudTextField T="string" @bind-Value="_addPhoneInput" Label="Phone number"
                      InputType="InputType.Telephone" Variant="Variant.Outlined">
        </MudTextField>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Transparent" OnClick="CancelAddPhoneDialog">Cancel</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="SaveAddPhoneDialog">Save phone number</MudButton>
    </DialogActions>
</MudDialog>

@code {

    [Parameter] public Contact? Contact { get; set; }
    [Parameter] public required Func<Task<ApplicationUser>> GetUserFunc { get; set; }
    [Parameter] public EventCallback OnPhoneChanged { get; set; }

    private bool _addPhoneDialogIsVisible = false;
    private string _addPhoneInput = string.Empty;

    private readonly DialogOptions _defaultDialogOptions = new DialogOptions { FullWidth = true };

    private void OpenAddPhoneDialog() => _addPhoneDialogIsVisible = true;
    private void CancelAddPhoneDialog() => _addPhoneDialogIsVisible = false;

    private async Task SaveAddPhoneDialog()
    {
        Console.WriteLine($"Saving phone number {_addPhoneInput}");

        var phone = new Phone(_addPhoneInput);
        _addPhoneInput = string.Empty;

        await ContactService.AddPhoneNumber((await GetUserFunc()).Id, Contact.Id, phone);

        await OnPhoneChanged.InvokeAsync();
        _addPhoneDialogIsVisible = false;
    }

    private void RemovePhone(Phone phone)
    {
        Console.WriteLine($"Remove phone {phone.PhoneNumber}");
    }

}