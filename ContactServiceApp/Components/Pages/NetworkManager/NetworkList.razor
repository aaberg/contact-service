@page "/network"
@using Microsoft.AspNetCore.Authorization
@using ContactServiceApp.Identity
@using ContactServiceApp.Contacts
@using System.Collections.Immutable

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ContactService ContactService
@inject NavigationManager NavigationManager

@attribute [Authorize]

<section class="pa-0">
    <h2 class="mx-4">Contacts</h2>
    @foreach (var contact in _contacts)
    {
        <MudElement HtmlTag="div" @onclick="@(() => OnRowClicked(contact))" class="d-flex align-center cursor-pointer hover:mud-primary-hover px-4">
            <MudAvatar Color="Color.Info" Class="ma-2" Size="Size.Medium">
                @if (contact.ProfilePictureUrl == null)
                {
                    @(contact.Name.Length > 2 ? contact.Name.Substring(0, 2) : contact.Name)
                }
                else
                {
                    <MudImage Src="@contact.ProfilePictureUrl"></MudImage>
                }

            </MudAvatar>
            <MudText Typo="Typo.body1">@contact.Name</MudText>
            @if (contact.PrimaryEmail != null && !string.IsNullOrEmpty(contact.PrimaryEmail.Email))
            {
                <MudIcon Icon="@Icons.Material.Filled.Email" Class="ml-5 d-none d-sm-inline"></MudIcon>
                <MudText Typo="Typo.body2" Class="ml-1 d-none d-sm-inline">@contact.PrimaryEmail.Email</MudText>
            }

            @if (contact.PrimaryPhone != null)
            {
                <MudIcon Icon="@Icons.Material.Filled.Phone" Class="ml-5 d-none d-sm-inline"></MudIcon>
                <MudText Typo="Typo.body2" Class="ml-1 d-none d-sm-inline">@contact.PrimaryPhone.PhoneNumber</MudText>
            }
        </MudElement>
        <MudDivider/>
    }
    <div class="d-flex justify-center mt-2">
        <MudPagination Color="Color.Primary" Count="4"></MudPagination>
    </div>
</section>

@code {

    private ImmutableArray<Contact> _contacts = ImmutableArray<Contact>.Empty;
    private string _searchText = "";

    protected override async Task OnInitializedAsync()
    {
        var user = (await AuthenticationStateProvider.GetAuthenticationStateAsync()).User.ToApplicationUser();

        _contacts = await ContactService.GetAllContacts(user.Id);
    }

    private void OnRowClicked(Contact contact)
    {
        NavigationManager.NavigateTo($"/network/{contact.Id}");
    }

}